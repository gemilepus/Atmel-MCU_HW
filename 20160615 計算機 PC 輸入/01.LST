C51 COMPILER V9.00   01                                                                    06/15/2016 10:05:34 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE 01
OBJECT MODULE PLACED IN 01.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE 01.c BROWSE DEBUG OBJECTEXTEND TABS(2)

line level    source

   1          #include "AT89X52.H"
   2          #include "bin.c"
   3          //********************** functions ***************************
   4          //********************** Parameter ***************************
   5          sfr  Data=0x80;//P0資料
   6          sfr  LEDScan=0x90;//P1資料
   7          sfr  CScan=0xA0;//P2資料
   8          char code Column_Scan[4]= {0xFE,0xFD,0xFB,0xF7};
   9          char code Seg_Row_Data[16]= { 0xC0,0xF9,0xA4,0xB0,0x99,0x92,0x82,0xF8,0x80,0x98,0x88,0x83,0xC6,0xA1,0x86,0
             -x8E};
  10          int i=0,TEMP=0,LED_TEMP[4]={0,0,0,0},Key_Data=0,Commandkey=0,deTime=0;
  11          int NumericalA=0,NumericalB=0,TotalNum=0,CommandTemp=0,Comadd=0,Key_T;
  12          char Key_Scan;
  13          sbit RS=0x96;  //P16 LCD指令/資料控制,RS=0指令，RS=1資料
  14                         //LCD讀取/寫入控制,R/W=GND寫入
  15          sbit EN=0x97;  //P17 LCD致能輸出,EN=0禁能LCD，EN=1致能LCD
  16          
  17          main() 
  18          {
  19   1        
  20   1         SCON = 0x50;     //設定UART串列傳輸為MODE1及致能接收
  21   1         TMOD = 0x20;     //設定TIMER1為MODE2
  22   1         TH1=TL1=256-(28800/9600);  //設計時器決定串列傳輸鮑率
  23   1         TR1 = 1;          //開始計時
  24   1         
  25   1         LCD_init();      // 重置及清除LCD
  26   1         LCD_Cmd(0x80);     //游標由第一行開始顯示    
  27   1         while(1){
  28   2        LEDScan=0xFF;       
  29   2        Data=Seg_Row_Data[LED_TEMP[i]];
  30   2          LEDScan=Column_Scan[i];
  31   2           
  32   2        if(RI==1){     
  33   3        RI=0; 
  34   3         // if(deTime!=0)deTime--; 
  35   3           //if(Key_Scan!=0x0F){    
  36   3           // deTime=5000;
  37   3      
  38   3          Key_Scan=SBUF;
  39   3          Key_Scan=(Key_Scan+'0');
  40   3          //LCD_Data(Key_Scan);   
  41   3              
  42   3                 if(Key_Scan=='a'){Key_Data=1;Key_T=1;}
  43   3                 if(Key_Scan=='b'){Key_Data=2;Key_T=1;}
  44   3                 if(Key_Scan=='c'){Key_Data=3;Key_T=1;}
  45   3                 if(Key_Scan=='d'){Key_Data=4;Key_T=1;}
  46   3                 if(Key_Scan=='e'){Key_Data=5;Key_T=1;}
  47   3                 if(Key_Scan=='f'){Key_Data=6;Key_T=1;}
  48   3                 if(Key_Scan=='g'){Key_Data=7;Key_T=1;}
  49   3                 if(Key_Scan=='h'){Key_Data=8;Key_T=1;}
  50   3                 if(Key_Scan=='i'){Key_Data=9;Key_T=1;}
  51   3                 if(Key_Scan=='`'){Key_Data=0;Key_T=1;}
  52   3                 if(Key_T==1){   
  53   4                      LED_TEMP[3]=LED_TEMP[2];
  54   4                      LED_TEMP[2]=LED_TEMP[1];
C51 COMPILER V9.00   01                                                                    06/15/2016 10:05:34 PAGE 2   

  55   4                      LED_TEMP[1]=LED_TEMP[0];
  56   4                      LED_TEMP[0]=Key_Data;
  57   4                      LCD_Data(Key_Data+'0');
  58   4                      SBUF=Key_Data+'0';while(TI==0); TI=0;         
  59   4              }
  60   3          
  61   3                 if(Key_Scan=='['){Commandkey=12;}
  62   3                 if(Key_Scan==']'){Commandkey=13;}
  63   3                 if(Key_Scan=='Z'){Commandkey=14;}
  64   3                 if(Key_Scan=='_'){Commandkey=15;}
  65   3                 if(Key_Scan=='='){Commandkey=10;}
  66   3                 if(Key_Scan=='^'){Commandkey=11;}
  67   3              
  68   3          Key_T=0;
  69   3         //}     
  70   3          }
  71   2           
  72   2          if(Commandkey!=0){
  73   3            if(Commandkey!=10){
  74   4             if(Commandkey==12 || Commandkey==13 || Commandkey==14 || Commandkey==15){
  75   5               if(Commandkey==12){ LCD_Data('+'); SBUF='+';while(TI==0); TI=0;    }
  76   5               if(Commandkey==13){ LCD_Data('-'); SBUF='-';while(TI==0); TI=0;    }
  77   5               if(Commandkey==14){ LCD_Data('*'); SBUF='*';while(TI==0); TI=0;    }
  78   5               if(Commandkey==15){ LCD_Data('/'); SBUF='/';while(TI==0); TI=0;    }
  79   5                  if(CommandTemp!=0){
  80   6                    NumericalB=LED_TEMP[3]*1000+LED_TEMP[2]*100+LED_TEMP[1]*10+LED_TEMP[0];
  81   6                    LED_TEMP[0]=LED_TEMP[1]=LED_TEMP[2]=LED_TEMP[3]=0;
  82   6                    if(CommandTemp==1){
  83   7                        NumericalA=NumericalA+NumericalB;
  84   7                                } 
  85   6                    if(CommandTemp==2){
  86   7                        NumericalA=NumericalA-NumericalB;
  87   7                                } 
  88   6                    if(CommandTemp==3){
  89   7                        NumericalA=NumericalA*NumericalB;
  90   7                                }     
  91   6                    if(CommandTemp==4){
  92   7                        NumericalA=NumericalA/NumericalB;
  93   7                                }
  94   6                                if(Commandkey==12){ CommandTemp=1;}
  95   6                          if(Commandkey==13){ CommandTemp=2;}
  96   6                          if(Commandkey==14){ CommandTemp=3;}
  97   6                          if(Commandkey==15){ CommandTemp=4;}             
  98   6                          }
  99   5                  else{
 100   6                      if(Commandkey==12){ CommandTemp=1;}
 101   6                          if(Commandkey==13){ CommandTemp=2;}
 102   6                          if(Commandkey==14){ CommandTemp=3;}
 103   6                          if(Commandkey==15){ CommandTemp=4;}
 104   6                                NumericalA=LED_TEMP[3]*1000+LED_TEMP[2]*100+LED_TEMP[1]*10+LED_TEMP[0]; 
 105   6                                LED_TEMP[0]=LED_TEMP[1]=LED_TEMP[2]=LED_TEMP[3]=0;             
 106   6                  }          
 107   5                     }
 108   4                  }
 109   3              if(Commandkey==11){
 110   4               NumericalA=NumericalB=TotalNum=CommandTemp=0;
 111   4                     LED_TEMP[0]=LED_TEMP[1]=LED_TEMP[2]=LED_TEMP[3]=0;
 112   4                 LCD_Cmd(0x01); //清除顯示幕  
 113   4                     LCD_Cmd(0x02); //游標回原位 
 114   4                  }
 115   3          
 116   3              if(Commandkey==10){
C51 COMPILER V9.00   01                                                                    06/15/2016 10:05:34 PAGE 3   

 117   4                  
 118   4                 if(CommandTemp!=0){
 119   5                    NumericalB=LED_TEMP[3]*1000+LED_TEMP[2]*100+LED_TEMP[1]*10+LED_TEMP[0];
 120   5                    if(CommandTemp==1){
 121   6                        NumericalA=NumericalA+NumericalB;
 122   6                    } 
 123   5                    if(CommandTemp==2){
 124   6                        NumericalA=NumericalA-NumericalB;
 125   6                    } 
 126   5                    if(CommandTemp==3){
 127   6                        NumericalA=NumericalA*NumericalB;
 128   6                    }     
 129   5                    if(CommandTemp==4){
 130   6                        NumericalA=NumericalA/NumericalB;
 131   6                    }
 132   5                    CommandTemp=0;            
 133   5                  } 
 134   4                 TotalNum=NumericalA;
 135   4                 LCD_Cmd(0xA9);
 136   4                 LCD_Data('=');
 137   4                 SBUF='=';while(TI==0); TI=0;
 138   4                 if(TotalNum<0){LCD_Data('-');SBUF='-';while(TI==0); TI=0;TotalNum=TotalNum*(-1);}
 139   4                 if(TotalNum>=1000){LCD_Data(TotalNum/1000+'0');}
 140   4                 if(TotalNum>=100){LCD_Data(TotalNum%1000 / 100+'0');}
 141   4                 if(TotalNum>=10){LCD_Data(TotalNum%100 / 10+'0');} 
 142   4                 LCD_Data(TotalNum%10+'0'); 
 143   4                 LED_TEMP[3]=TotalNum/1000;
 144   4                         LED_TEMP[2]=TotalNum%1000 / 100;
 145   4                         LED_TEMP[1]=TotalNum%100 / 10;
 146   4                         LED_TEMP[0]=TotalNum%10; 
 147   4      
 148   4                 if(TotalNum>=1000){SBUF=(TotalNum/1000+'0');while(TI==0); TI=0; }
 149   4                 if(TotalNum>=100){SBUF=(TotalNum%1000 / 100+'0');while(TI==0); TI=0; }
 150   4                 if(TotalNum>=10){SBUF=(TotalNum%100 / 10+'0');while(TI==0); TI=0; }  
 151   4                 SBUF=(TotalNum%10+'0');while(TI==0); TI=0;
 152   4             }               
 153   3             Commandkey=0;
 154   3          }     
 155   2          i++;if(i==4)i=0; 
 156   2         } 
 157   1      }
 158          
 159          /***********************************************************
 160          *函數名稱: LCD_Data
 161          *功能描述: 傳送資料到文字型LCD
 162          *輸入參數：dat
 163          ************************************************************/
 164          void LCD_Data(char dat)  //傳送資料到LCD
 165          {
 166   1          Data=dat; //資料送到BUS
 167   1          RS=1;  EN=1;//資料寫入到LCD內
 168   1          Delay_ms(1);   //LCD等待寫入完成
 169   1          EN=0;          //禁能LCD    
 170   1      }
 171          /***************************************************************
 172          *函數名稱: LCD_Cmd
 173          *功能描述: 傳送命令到文字型LCD
 174          *輸入參數：Cmd
 175          ************************************************************/
 176          void LCD_Cmd(unsigned char Cmd) //傳送命令到LCD
 177          {
 178   1          Data=Cmd;  //命令送到BUS
C51 COMPILER V9.00   01                                                                    06/15/2016 10:05:34 PAGE 4   

 179   1          RS=0;   EN=1; //命令寫入到LCD內
 180   1          Delay_ms(1);    //LCD等待寫入完成     
 181   1          EN=0;           //禁能LCD
 182   1      }
 183          /***************************************************************
 184          *函數名稱: LCD_init
 185          *功能描述: 啟始化文字型LCD
 186          *****************************************************************/
 187          void LCD_init(void)    //LCD的啟始程式  
 188          {
 189   1          LCD_Cmd(0x38);/*0011 1000,8bit傳輸,顯示2行,5*7字型
 190   1                          bit4:DL=1,8bit傳輸,
 191   1                          bit3:N=1,顯示2行
 192   1                          bit2:F=0,5*7字型*/    
 193   1          LCD_Cmd(0x0c);/*0000 1100,顯示幕ON,不顯示游標,游標不閃爍
 194   1                          bit2:D=1,顯示幕ON
 195   1                          bit1:C=0,不顯示游標
 196   1                          bit0:B=0,游標不閃爍*/
 197   1          LCD_Cmd(0x06);/*0000 0110,//顯示完游標右移,游標移位禁能 
 198   1                          bit1:I/D=1,顯示完游標右移,
 199   1                          bit0:S=0,游標移位禁能*/  
 200   1          LCD_Cmd(0x01); //清除顯示幕  
 201   1          LCD_Cmd(0x02); //游標回原位  
 202   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1596    ----
   CONSTANT SIZE    =     20    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     31    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
